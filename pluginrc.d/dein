if dein#load_state('~/.cache/dein')
   call dein#begin('~/.cache/dein')
   call dein#add('~/.cache/dein/repos/github.com/Shougo/dein.vim')

   call dein#add('shmup/vim-sql-syntax', {'on_ft': ['sql', 'pgsql']})
   call dein#add('liuchengxu/vista.vim', {'on_cmd': ['Vista', 'Vista!!']})
   call dein#add('kamykn/spelunker.vim', {'on_func': 'spelunker#check', 'on_cmd': 'Spell'})

   call dein#add('mattn/emmet-vim', { 'on_ft': ['html','css', 'js', 'ts', 'tsx'] })

   " add comments to code, tomtom/tcomment_vim is another alternative
   call dein#add('preservim/nerdcommenter', {'on_cmd': ['NERDCommenterComment', 'NERDCommenterToggle'], 'on_map':'<Leader>c<space>'})

   call dein#add('mhinz/vim-startify')

   call dein#add('euclio/vim-markdown-composer', { 'build': 'cargo build --release', 'on_cmd': ['ComposerStart', 'ComposerOpen']})

   call dein#add('plasticboy/vim-markdown',{
   \ 'on_ft': ['markdown'],
   \ 'depends': 'tabular',
   \ 'hook_add': "
   \  let g:vim_markdown_frontmatter = 1 \n
   \  let g:vim_markdown_strikethrough = 1 \n
   \  let g:vim_markdown_folding_level = 6 \n
   \  let g:vim_markdown_override_foldtext = 1 \n
   \  let g:vim_markdown_folding_style_pythonic = 1 \n
   \  let g:vim_markdown_conceal = 1 \n
   \  let g:vim_markdown_conceal_code_blocks = 1 \n
   \  let g:vim_markdown_new_list_item_indent = 0 \n
   \  let g:vim_markdown_toc_autofit = 0 \n
   \  let g:vim_markdown_edit_url_in = 'vsplit' \n
   \  let g:vim_markdown_fenced_languages = ['c++=javascript',  'js=javascript',  'json=javascript', 'jsx=javascript',  'tsx=javascript'] \n "} )

   call dein#add('godlygeek/tabular')

   call dein#add('fatih/vim-go', { 'on_ft': 'go', 'on_event': 'InsertEnter', 'on_cmd': ['GoImport', 'GoImports', 'GoTest', 'GoBuild'],'build': ':GoInstallBinaries' })
   call dein#add('buoto/gotests-vim', { 'on_ft': 'go' } )

   call dein#add('voldikss/vim-floaterm', { 'on_cmd': ['FloatermNew','FloatermToggle'] })

   call dein#add('mhinz/vim-signify', { 'on_cmd': ['SignifyEnable', 'SignifyEnableAll', 'SignifyToggle'] })

   call dein#add('w0rp/ale', {'lazy':1, 'on_cmd': 'ALEToggle', 'on_event':['BufWritePre']})
   
   call dein#add('vim-test/vim-test'  , { 'on_cmd': ['TestNearest', 'TestFile', 'TestSuite'] })

   call dein#add('chaoren/vim-wordmotion', {'on_map': ['<Plug>WordMotion_', 'ciw']})

   call dein#add('liuchengxu/vim-clap' , { 'hook_post_update': 'call clap#installer#force_download()','on_map': '<Plug>' } )
   call dein#add('simnalamburt/vim-mundo', {'on_cmd':['MundoToggle', 'GundoToggle', 'GundoShow']})
   call dein#add('luochen1990/rainbow')
   call dein#add('Yggdroot/indentLine')
   call dein#add('mtdl9/vim-log-highlighting', {'on_ft': ['text', 'log']})
   call dein#add('ray-x/vim-interestingwords', {'on_map': ['<Leader>u']})
   call dein#add('justinmk/vim-sneak', {'on_map': ['<Plug>Sneak_', 's']})
   
   call dein#add('tpope/vim-fugitive', {
       \ 'on_cmd' : ['Gvsplit', 'Gstatus','Gdiffsplit', 'Gvdiffsplit', 'Gvdiffsplit!']
       \ })

   "" for those cannot handle by lsp
   call dein#add('Chiel92/vim-autoformat', {'on_cmd': 'Autoformat'})
   call dein#add('ray-x/paleaurora')


if has('nvim')

   call dein#add('hrsh7th/vim-vsnip', {'on_event': 'InsertEnter'})
   call dein#add('hrsh7th/vim-vsnip-integ', {'on_event': 'InsertEnter'})
   """""""""""""Nvim specific""""""""""""""
   call dein#add('kevinhwang91/rnvimr', {'on_cmd':'RnvimrToggle'})
   call dein#add('rhysd/git-messenger.vim', {
              \   'lazy' : 1,
              \   'on_cmd' : 'GitMessenger',
              \   'on_map' : ['<leader>gm', '<Plug>(git-messenger'],
              \ })
   " call dein#add('tveskag/nvim-blame-line' , { 'on_cmd': ['EnableBlameLine', 'ToggleBlameLine', 'SingleBlameLine']})

   """""""""""""LUA Plugins""""""""""""""
   call dein#add('kyazdani42/nvim-web-devicons',{'name': 'devicons'})
   
   call dein#add('kyazdani42/nvim-tree.lua') ", { 'depends': 'devicons','on_cmd': ['LuaTreeToggle', 'LuaTreeOpen'] })
   
   call dein#add('akinsho/nvim-bufferline.lua')

   call dein#add('neovim/nvim-lspconfig')

   " , {'name':'lsp', 'on_ft': ['go', 'bash', 'go', 'c_sharp', 'cpp', 'css', 'dart', 'html', 'java', 'javascript', 'jsdoc', 'json', 'lua', 'python', 'rust', 'ruby', 'toml', 'typescript']})

   call dein#add('nvim-lua/completion-nvim', {'name':'completion'})

   call dein#add('nvim-lua/diagnostic-nvim', {'depends':'lsp'})

   " leverages the tagfunc option to customize how tags are searched, use tag in lsp
   " call dein#add('weilbith/nvim-lsp-smag', {'depends':'lsp', 'on_event': 'InsertEnter'})
   call dein#add('weilbith/nvim-lsp-diamove', {
      \ 'on_cmd': ['Dabove', 'Dbelow'],
      \ })

   call dein#add('nvim-lua/lsp-status.nvim', {'depends':'lsp'})

   call dein#add('nvim-treesitter/nvim-treesitter', {'merged': 0, 'name':'treesitter', 'on_event': 'InsertEnter', 'on_ft': ['bash', 'c_sharp','c', 'cpp', 'css', 'dart', 'go', 'html', 'java', 'javascript', 'jsdoc', 'json', 'lua', 'python', 'rust', 'ruby', 'toml', 'typescript']})
   " call dein#add('nvim-treesitter/nvim-treesitter', {'merged': 0, 'name':'treesitter'})
   
   call dein#add('ncm2/float-preview.nvim', {'on_event': 'InsertEnter'})

   call dein#add('nvim-treesitter/completion-treesitter', {'depends': ['treesitter', 'completion'], 'on_event': 'InsertEnter', 'on_ft': ['go', 'bash', 'go', 'c_sharp', 'cpp', 'css', 'dart', 'html', 'java', 'javascript', 'jsdoc', 'json', 'lua', 'python', 'rust', 'ruby', 'toml', 'typescript']})

   call dein#add('steelsojka/completion-buffers', {'depends': 'completion', 'on_event': 'InsertEnter'})

   call dein#add('aca/completion-tabnine', {'do': './install.sh' , 'on_event': 'InsertEnter'})
   call dein#add('RishabhRD/popfix')
   call dein#add('RishabhRD/nvim-lsputils', {'depends':'lsp'})
   " call dein#add('nvim-lua/popup.nvim')

   call dein#add('Xuyuanp/scrollbar.nvim')
   
   call dein#add('nvim-lua/plenary.nvim')  "lua library"
   call dein#add('tjdevries/express_line.nvim', {'depends': 'plenary'})
   
   " call dein#add('glepnir/galaxyline.nvim')
   call dein#add('kdheepak/lazygit.nvim', { 'on_cmd': 'LazyGit' })
   call dein#add('norcalli/nvim-colorizer.lua')

   call dein#add('tjdevries/nlua.nvim', {'on_ft':'lua'})
   call dein#add('bfredl/nvim-luadev', {'on_ft':'lua'})

   " call dein#add('nvim-lua/telescope.nvim')
"  """""""""""""LUA Plugins end""""""""""""""
endif ""end of nvim


   call dein#end()
   call dein#save_state()
endif


" could try"
" rhysd/conflict-marker.vim"
"rhysd/vim-grammarous"

"" Not used in last 4 weeks
   "" auto close
   " call dein#add('cohama/lexima.vim', { 'on_event': 'InsertEnter',  'on_map': '<Plug>'})
   " \ 'hook_post_source': "
   "   \ let g:lexima_no_default_rules = 1 \n
   "   \ call lexima#set_default_rules() \n
   "   \ imap <expr> <cr>  pumvisible()  ?  '\<Plug>(completion_confirm_completion)'  : '\<c-e>\' . lexima#expand('<CR>', 'i') : lexima#expand('<CR>', 'i') "})
   " call dein#add('Raimondi/delimitMate', { 'on_event': 'InsertEnter',  'on_map': '<Plug>'})
""   call dein#add('skywind3000/asynctasks.vim', { 'on_cmd': ['AsyncRun', 'AsyncTask']})
""   call dein#add('skywind3000/asyncrun.vim', { 'on_cmd': ['AsyncRun', 'AsyncTask']})


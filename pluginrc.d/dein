if dein#load_state('~/.cache/dein')
   call dein#begin('~/.cache/dein')
   call dein#add('~/.cache/dein/repos/github.com/Shougo/dein.vim')

   call dein#add('shmup/vim-sql-syntax', {'on_ft': ['sql', 'pgsql']})
   call dein#add('liuchengxu/vista.vim', {'on_cmd': ['Vista', 'Vista!!']})

   call dein#add('kamykn/spelunker.vim', {'on_func': ['spelunker#check','spelunker#check_displayed_words']})  " nevim-qt 'on_func': 'spelunker#check'failed"
   call dein#add('rhysd/vim-grammarous')
   
   call dein#add('mattn/emmet-vim', { 'on_ft': ['html','css', 'js', 'ts', 'tsx'] })

   " add comments to code, tomtom/tcomment_vim is another alternative
   call dein#add('preservim/nerdcommenter', {'on_cmd': ['NERDCommenterComment', 'NERDCommenterToggle'], 'on_map':'<Leader>c<space>'})
   " call dein#add('glepnir/dashboard-nvim')
   call dein#add('euclio/vim-markdown-composer', { 'build': 'cargo build --release', 'on_cmd': ['ComposerStart', 'ComposerOpen']})

   call dein#add('prettier/vim-prettier', { 'build': 'yarn install', 'on_ft': ['html','css', 'js', 'ts', 'tsx', 'md']})

   call dein#add('plasticboy/vim-markdown',{
   \ 'on_ft': ['markdown'],
   \ 'depends': 'tabular',
   \ 'hook_add': "
   \  let g:vim_markdown_frontmatter = 1 \n
   \  let g:vim_markdown_strikethrough = 1 \n
   \  let g:vim_markdown_folding_level = 6 \n
   \  let g:vim_markdown_override_foldtext = 1 \n
   \  let g:vim_markdown_folding_style_pythonic = 1 \n
   \  let g:vim_markdown_conceal = 1 \n
   \  let g:vim_markdown_conceal_code_blocks = 1 \n
   \  let g:vim_markdown_new_list_item_indent = 0 \n
   \  let g:vim_markdown_toc_autofit = 0 \n
   \  let g:vim_markdown_edit_url_in = 'vsplit' \n
   \  let g:vim_markdown_fenced_languages = ['c++=c', 'vb=c', 'js=c',  'json=c', 'jsx=c',  'tsx=c'] \n "} )

   call dein#add('godlygeek/tabular')

   call dein#add('fatih/vim-go', { 'on_ft': 'go', 'on_event': 'InsertEnter', 'on_cmd': ['GoImport', 'GoImports', 'GoTest', 'GoBuild'],'build': ':GoInstallBinaries' })
   call dein#add('buoto/gotests-vim', { 'on_ft': 'go' } )

   call dein#add('voldikss/vim-floaterm', { 'on_cmd': ['FloatermNew','FloatermToggle'] })

   call dein#add('w0rp/ale', {'lazy':1, 'on_cmd': 'ALEEnable', 'on_event':['BufWritePre']})
   
   call dein#add('vim-test/vim-test'  , { 'on_cmd': ['TestNearest', 'TestFile', 'TestSuite'] })

   call dein#add('chaoren/vim-wordmotion', {'on_map': ['<Plug>WordMotion_', 'ciw']})

   call dein#add('liuchengxu/vim-clap' , { 'hook_post_update': 'call clap#installer#force_download()','on_map': '<Plug>' } )
   call dein#add('mbbill/undotree')
   call dein#add('luochen1990/rainbow')
   call dein#add('Yggdroot/indentLine')
   call dein#add('mtdl9/vim-log-highlighting', {'on_ft': ['text', 'log']})
   call dein#add('ray-x/vim-interestingwords', {'on_func': 'InterestingWords', 'on_map': ['<Plug>', '<Leader>u']})
   call dein#add('justinmk/vim-sneak', {'on_map': ['<Plug>Sneak_', 's']})
   call dein#add('AndrewRadev/splitjoin.vim',{'on_cmd':['SplitjoinJoin','SplitjoinSplit']})
   
   call dein#add('tpope/vim-fugitive', {
       \ 'on_cmd' : ['Gvsplit','Git','Gedit','Gstatus','Gdiffsplit','Gvdiffsplit','Gvdiffsplit!']
       \ })
   call dein#add('lewis6991/gitsigns.nvim')

   "" for those cannot handle by lsp
   call dein#add('Chiel92/vim-autoformat', {'on_cmd': 'Autoformat'})
   call dein#add('ray-x/paleaurora')


   call dein#add('tpope/vim-obsession')
   call dein#add('dhruvasagar/vim-prosession')
   call dein#add('Raimondi/delimitMate', { 'on_event': 'InsertEnter',  'on_map': '<Plug>'})

   "" seems to be redundant clap. just in case clap is crashing
   " call dein#add('junegunn/fzf', { 'build': './install --all', 'merged': 0 }) 
   " call dein#add('junegunn/fzf.vim', { 'depends': 'fzf' })
   " call dein#add('chengzeyi/fzf-preview.vim', { 'depends': 'fzf' })
   
if has('nvim')
   call dein#add('hrsh7th/vim-vsnip', {'on_event': 'InsertEnter'})

   call dein#add('hrsh7th/vim-vsnip-integ', {'on_event': 'InsertEnter'})
   """""""""""""Nvim specific""""""""""""""
   call dein#add('rhysd/git-messenger.vim', {
              \   'lazy' : 1,
              \   'on_cmd' : 'GitMessenger',
              \   'on_map' : ['<leader>gm', '<Plug>(git-messenger'],
              \ })
 " call dein#add('tveskag/nvim-blame-line' , { 'on_cmd': ['EnableBlameLine', 'ToggleBlameLine', 'SingleBlameLine']})

 """""""""""""LUA Plugins""""""""""""""
   call dein#add('kyazdani42/nvim-web-devicons',{'name': 'devicons'})

   call dein#add('kyazdani42/nvim-tree.lua') ", { 'depends': 'devicons','on_cmd': ['NvimTreeToggle', 'NvimTreeOpen'])

   call dein#add('neovim/nvim-lspconfig', {'name':'lsp'})
   call dein#add('glepnir/lspsaga.nvim')
   call dein#add('bfredl/nvim-miniyank')   " copy paste failed in block mode when clipboard = unnameplus"
   call dein#add('nanotee/sqls.nvim', {'on_ft': ['sql', 'mysql', 'pgsql']})  " not working ATM

   " , {'name':'lsp', 'on_ft': ['go', 'bash', 'go', 'c_sharp', 'cpp', 'css', 'dart', 'html', 'java', 'javascript', 'jsdoc', 'json', 'lua', 'python', ust', " 'ruby', 'toml', 'typescript', 'sql']})

   " https://github.com/hrsh7th/nvim-compe ?
   call dein#add('hrsh7th/nvim-compe', {'name':'compe'})
   call dein#add('ray-x/lsp_signature.nvim')
   call dein#add('RRethy/vim-illuminate')

   " leverages the tagfunc option to customize how tags are searched, use tag in lsp
   call dein#add('weilbith/nvim-lsp-smag', {'depends':'lsp', 'on_event': 'InsertEnter'})

   call dein#add('nvim-lua/lsp-status.nvim', {'depends':'lsp'})

   call dein#add('nvim-treesitter/nvim-treesitter', {'name':'treesitter'})

   call dein#add('ncm2/float-preview.nvim', {'on_event': 'InsertEnter'})
   call dein#add('tzachar/compe-tabnine', { 'build': './install.sh', 'on_event': 'InsertEnter' })
   call dein#add('RishabhRD/popfix',{'build': 'make'})
   call dein#add('RishabhRD/nvim-lsputils', {'depends':'lsp'})  "for code action"
   
   call dein#add('Xuyuanp/scrollbar.nvim')
   call dein#add('akinsho/nvim-bufferline.lua')

   call dein#add('glepnir/galaxyline.nvim')

   call dein#add('norcalli/nvim-colorizer.lua')
   
  " note: search is slower compared to FZF and clap
   call dein#add('nvim-lua/plenary.nvim')  "lua library"
   call dein#add('nvim-lua/popup.nvim')
   call dein#add('nvim-telescope/telescope.nvim')

"  """""""""""""LUA Plugins end""""""""""""""
endif ""end of nvim


   call dein#end()
   call dein#save_state()
endif


" could try"
" rhysd/conflict-marker.vim"
"rhysd/vim-grammarous"

"" Not used in last 4 weeks
   "" auto close
   " call dein#add('cohama/lexima.vim', { 'on_event': 'InsertEnter',  'on_map': '<Plug>'})
   " \ 'hook_post_source': "
   "   \ let g:lexima_no_default_rules = 1 \n
   "   \ call lexima#set_default_rules() \n
   "   \ imap <expr> <cr>  pumvisible()  ?  '\<Plug>(completion_confirm_completion)'  : '\<c-e>\' . lexima#expand('<CR>', 'i') : lexima#expand('<CR>', 'i') "})
   " call dein#add('Raimondi/delimitMate', { 'on_event': 'InsertEnter',  'on_map': '<Plug>'})
""   call dein#add('skywind3000/asynctasks.vim', { 'on_cmd': ['AsyncRun', 'AsyncTask']})
""   call dein#add('skywind3000/asyncrun.vim', { 'on_cmd': ['AsyncRun', 'AsyncTask']})
"    call dein#add('brooth/far.vim')
"   call dein#add('tjdevries/nlua.nvim', {'on_ft':'lua'})
"   call dein#add('bfredl/nvim-luadev', {'on_ft':'lua'})

"""""" replaced """""""""
   " call dein#add('kevinhwang91/rnvimr', {'on_cmd':'RnvimrToggle'})
   "   call dein#add('mhinz/vim-signify', { 'on_cmd': ['SignifyEnable', 'SignifyEnableAll', 'SignifyToggle'] })   GitSign"
   " call dein#add('Yggdroot/indentLine') 
   " call dein#add('mhinz/vim-startify')

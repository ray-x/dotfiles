{
  "suggest.noselect": false,
  "coc.preferences.formatOnSaveFiletypes": [
    "javascript",
    "typescript",
    "typescriptreact",
    "json",
    "javascriptreact",
    "typescript.tsx",
    "graphql"
  ],
  // Enable preselect feature on neovim, default: `true`
  "suggest.enablePreselect": true,
  // Add preview option to `completeopt`, default: `false`
  "suggest.enablePreview": true,
  // completion automatically select the first completed
  "suggest.detailField": "preview",
  "suggest.floatEnable": true,
  "suggest.timeout": 3000, //default 5000
  "suggest.echodocSupport": true, //echodoc.vim installed

  "codeLens.enable": true,

  "list.indicator": "‣",
  "list.maxHeight": "12", //def: 10
  "list.selectedSignText": "﯂",
  "list.maxPreviewHeight": 20, // def:12
  "list.previewSplitRight": true,
  // "suggest.triggerAfterInsertEnter": true
  "suggest.minTriggerInputLength": 2,
  // Target to show hover information, default is floating window when possible.
  "coc.preferences.hoverTarget": "float",
  // Auto close preview window on cursor move.,  default: `true`
  // "coc.preferences.previewAutoClose": false,
  // "coc.preferences.jumpCommand": "split",

  //-------- Code color highlight Configuration --------
  "coc.preferences.colorSupport": false, //use colorizer.lua
  "coc.preferences.maxFileSize": "32MB", //def 10MB
  "coc.preferences.extensionUpdateCheck": "weekly", //def: never
  "coc.preferences.snippetStatusText": "", //dfe SNIP
  "highlight.colors.enable": false, //colorizer.lua
  "highlight.document.enable": true,

  //-------- Code Spell Checker Configuration --------
  "cSpell.enabled": true,
  // The Language local to use when spell checking. "en" and "en-GB" are currently supported.
  "cSpell.language": "en",

  // Controls the maximum number of spelling errors per document.
  "cSpell.maxNumberOfProblems": 20,

  // Controls the number of suggestions shown.
  "cSpell.numSuggestions": 6,

  // The minimum length of a word before checking it against a dictionary.
  "cSpell.minWordLength": 5,

  // Specify file types to spell check.
  "cSpell.enabledLanguageIds": [
    "csharp",
    "go",
    "cpp",
    "c",
    "py",
    "javascript",
    "javascriptreact",
    "markdown",
    "php",
    "plaintext",
    "typescript",
    "typescriptreact",
    "yml",
    "text"
  ],

  // Display the spell checker status on the status bar.
  "cSpell.showStatus": true,

  // Words to add to dictionary for a workspace.
  "cSpell.words": [],

  // Enable / Disable compound words like 'errormessage'
  "cSpell.allowCompoundWords": false,

  // Words to be ignored and not suggested.
  "cSpell.ignoreWords": ["behaviour"],

  // User words to add to dictionary.  Should only be in the user settings.
  "cSpell.userWords": [
    "AKHQ",
    "JAAS",
    "SASL",
    "Shopify",
    "dynamodbiface",
    "gopls",
    "ozzo",
    "postgres",
    "sarama"
  ],

  // Specify paths/files to ignore.
  "cSpell.ignorePaths": [
    "node_modules", // this will ignore anything the node_modules directory
    "**/node_modules", // the same for this one
    "**/node_modules/**", // the same for this one
    "node_modules/**", // Doesn't currently work due to how the current working directory is determined.
    "vscode-extension", //
    ".git", // Ignore the .git directory
    "*.dll", // Ignore all .dll files.
    "**/*.dll" // Ignore all .dll files
  ],

  // flagWords - list of words to be always considered incorrect
  // This is useful for offensive words and common spelling errors.
  // For example "hte" should be "the"`
  "cSpell.flagWords": ["hte"],

  // Set the delay before spell checking the document. Default is 50.
  "cSpell.spellCheckDelayMs": 50,
  "explorer.sources": [
    {
      "name": "buffer",
      "expand": false
    },
    {
      "name": "file",
      "expand": true
    }
  ],

  "explorer.keyMappings": {
    "<cr>": ["expandable?", "expand", "open"],
    "v": "open:vsplit",
    "<space>": "toggleSelection"
  },
  "explorer.icon.enableVimDevicons": true, //NerdFont is better
  "explorer.icon.enableNerdfont": true,
  "explorer.buffer.tabOnly": true,
  "explorer.file.autoReveal": true,
  "explorer.file.column.git.icon.mixed": "",
  "explorer.file.column.git.icon.modified": "",
  "explorer.file.column.git.icon.added": "",
  "explorer.file.column.git.icon.deleted": "﫧",

  "explorer.file.column.git.icon.renamed": "",
  "explorer.file.column.git.icon.copid": "",
  "explorer.file.column.git.icon.unmerged": "שּׁ",
  "explorer.file.column.git.icon.untracked": "",
  "explorer.file.column.git.icon.ignored": "",
  "explorer.file.column.clip.copy": "",
  "explorer.file.column.clip.cut": "",

  "snippets.ultisnips.directories": ["UltiSnips", "gosnippets/UltiSnips"],
  "diagnostic.messageDelay": 800,  //def: 200
  "diagnostic.maxWindowWidth": 300,  // def: 80
  "diagnostic.displayByAle": false,
  "diagnostic.checkCurrentLine": false, // some time it is  annoying?...
  "diagnostic.refreshOnInsertMode": true, // annoying?
  "diagnostic.virtualText": true, // Note: nvim only!!
  "diagnostic.virtualTextCurrentLineOnly": false,
  "diagnostic.virtualTextLineSeparator": "",
  "diagnostic.maxWindowHeight": 10, //default:8
  "diagnostic.virtualTextPrefix": "  ",
  "diagnostic.errorSign": "",
  "diagnostic.warningSign": "⚠",
  "diagnostic.infoSign": "כֿ",
  "diagnostic.hintSign": "λ",

  "coc-actions.hideCursor":true,
  "git.changedSign.text": "פֿ",
  "git.addedSign.text": "ﰂ",
  "git.addedSign.hlGroup": "DiffAdd",
  "git.removedSign.text": "﫝",
  "git.removedSign.hlGroup": "DiffAdd",
  "git.showCommitInFloating": true,
  "git.virtualTextPrefix": "  ",
  "git.addGBlameToVirtualText": true, //nvim only
  "git.addGBlameToBufferVar": true,

  "signature.floatMaxWidth": 100, //def:80
  "go.enable": true,
  "go.goplsOptions": {
    "completeUnimported": true
  }
}
